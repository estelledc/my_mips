$date
   Mon Apr 28 20:09:12 2025
$end
$version
  2018.3
$end
$timescale
  1ps
$end
$scope module mips_cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var integer 32 # cycle_count $end
$scope module cpu $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & pc [31:0] $end
$var wire 32 ' next_pc [31:0] $end
$var wire 32 ( instruction [31:0] $end
$var wire 32 ) reg_data1 [31:0] $end
$var wire 32 * reg_data2 [31:0] $end
$var wire 32 + alu_result [31:0] $end
$var wire 32 , mem_read_data [31:0] $end
$var wire 32 - sign_extend [31:0] $end
$var wire 32 . zero_extend [31:0] $end
$var wire 5 / write_reg [4:0] $end
$var wire 32 0 reg_write_data [31:0] $end
$var wire 1 1 reg_write_en $end
$var wire 1 2 mem_write_en $end
$var wire 4 3 alu_control [3:0] $end
$var wire 2 4 reg_dst [1:0] $end
$var wire 2 5 mem_to_reg [1:0] $end
$var wire 1 6 alu_src $end
$var wire 1 7 branch $end
$var wire 1 8 jump $end
$var wire 1 9 zero $end
$var reg 1 : clk_rise $end
$var reg 1 ; clk_fall $end
$var reg 32 < pc_reg [31:0] $end
$scope module imem $end
$var wire 1 = clk $end
$var wire 6 > addr [5:0] $end
$var reg 32 ? instruction [31:0] $end
$upscope $end
$scope module registers $end
$var wire 1 @ clk $end
$var wire 1 % reset $end
$var wire 5 A read_reg1 [4:0] $end
$var wire 5 B read_reg2 [4:0] $end
$var wire 5 / write_reg [4:0] $end
$var wire 32 0 write_data [31:0] $end
$var wire 1 1 write_en $end
$var reg 32 C read_data1 [31:0] $end
$var reg 32 D read_data2 [31:0] $end
$var integer 32 E i $end
$upscope $end
$scope module control $end
$var wire 6 F opcode [5:0] $end
$var wire 6 G funct [5:0] $end
$var reg 2 H reg_dst [1:0] $end
$var reg 1 I alu_src $end
$var reg 2 J mem_to_reg [1:0] $end
$var reg 1 K reg_write $end
$var reg 1 L mem_write $end
$var reg 4 M alu_control [3:0] $end
$var reg 1 N branch $end
$var reg 1 O jump $end
$upscope $end
$scope module main_alu $end
$var wire 32 ) a [31:0] $end
$var wire 32 P b [31:0] $end
$var wire 4 3 control [3:0] $end
$var reg 32 Q result [31:0] $end
$var wire 1 9 zero $end
$upscope $end
$scope module sign_ext $end
$var wire 16 R in [15:0] $end
$var reg 32 S out [31:0] $end
$upscope $end
$scope module zero_ext $end
$var wire 16 R in [15:0] $end
$var reg 32 T out [31:0] $end
$upscope $end
$scope module dmem $end
$var wire 1 U clk $end
$var wire 1 % reset $end
$var wire 6 V addr [5:0] $end
$var wire 32 * write_data [31:0] $end
$var wire 1 2 write_en $end
$var reg 32 W read_data [31:0] $end
$var integer 32 X i $end
$upscope $end
$scope module pc_calc $end
$var wire 32 & pc [31:0] $end
$var wire 26 Y jump_addr [25:0] $end
$var wire 32 - branch_addr [31:0] $end
$var wire 1 7 branch $end
$var wire 1 8 jump $end
$var wire 1 9 zero $end
$var wire 32 ) reg_data1 [31:0] $end
$var reg 32 Z next_pc [31:0] $end
$var wire 32 [ branch_offset [31:0] $end
$var wire 32 \ pc_plus_4 [31:0] $end
$var wire 32 ] branch_target [31:0] $end
$var wire 32 ^ jump_target [31:0] $end
$upscope $end
$upscope $end
$scope begin Block44_18 $end
$var integer 32 _ i $end
$upscope $end
$scope begin Block53_19 $end
$var integer 32 ` i $end
$upscope $end
$scope begin Block90_21 $end
$var integer 32 a i $end
$upscope $end
$scope begin Block94_22 $end
$var integer 32 b i $end
$upscope $end
$scope begin Block110_24 $end
$var integer 32 c i $end
$upscope $end
$scope begin Block116_25 $end
$var integer 32 d i $end
$upscope $end
$scope function get_r_type_name $end
$var reg 65 e get_r_type_name [64:0] $end
$var reg 6 f funct [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
b0 #
0$
1%
b0 &
b100 '
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
x1
x2
bx 3
bx 4
bx 5
x6
x7
x8
x9
x:
x;
b0 <
x=
b0 >
bx ?
x@
bx A
bx B
bx C
bx D
b100000 E
bx F
bx G
bx H
xI
bx J
xK
xL
bx M
xN
xO
bx P
bx Q
bx R
bx S
bx T
xU
bx V
bx W
b1000000 X
bx Y
b100 Z
bx00 [
b100 \
bx ]
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 ^
bx _
bx `
b100000 a
b1000000 b
bx c
bx d
bx e
bx f
$end
#5000
1!
1$
#10000
0!
0"
0$
0%
b100 &
b1000 '
b100 <
b1 >
b1000 Z
b1000 \
bx ]
#15000
1!
b1 #
1$
b100000 _
b1000000 `
#20000
0!
0$
b1000 &
b1100 '
b1000 <
b10 >
b1100 Z
b1100 \
bx ]
#25000
1!
b10 #
1$
b100000 _
b1000000 `
#30000
0!
0$
b1100 &
b10000 '
b1100 <
b11 >
b10000 Z
b10000 \
bx ]
#35000
1!
b11 #
1$
b100000 _
b1000000 `
#40000
0!
0$
b10000 &
b10100 '
b10000 <
b100 >
b10100 Z
b10100 \
bx ]
#45000
1!
b100 #
1$
b100000 _
b1000000 `
#50000
0!
0$
b10100 &
b11000 '
b10100 <
b101 >
b11000 Z
b11000 \
bx ]
#55000
1!
b101 #
1$
b100000 _
b1000000 `
#60000
0!
0$
b11000 &
b11100 '
b11000 <
b110 >
b11100 Z
b11100 \
bx ]
#65000
1!
b110 #
1$
b100000 _
b1000000 `
#70000
0!
0$
b11100 &
b100000 '
b11100 <
b111 >
b100000 Z
b100000 \
bx ]
#75000
1!
b111 #
1$
b100000 _
b1000000 `
#80000
0!
0$
b100000 &
b100100 '
b100000 <
b1000 >
b100100 Z
b100100 \
bx ]
#85000
1!
b1000 #
1$
b100000 _
b1000000 `
#90000
0!
0$
b100100 &
b101000 '
b100100 <
b1001 >
b101000 Z
b101000 \
bx ]
#95000
1!
b1001 #
1$
b100000 _
b1000000 `
#100000
0!
0$
b101000 &
b101100 '
b101000 <
b1010 >
b101100 Z
b101100 \
bx ]
#105000
1!
b1010 #
1$
b100000 _
b1000000 `
#110000
0!
0$
b101100 &
b110000 '
b101100 <
b1011 >
b110000 Z
b110000 \
bx ]
#115000
1!
b1011 #
1$
b100000 _
b1000000 `
#120000
0!
0$
b110000 &
b110100 '
b110000 <
b1100 >
b110100 Z
b110100 \
bx ]
#125000
1!
b1100 #
1$
b100000 _
b1000000 `
#130000
0!
0$
b110100 &
b111000 '
b110100 <
b1101 >
b111000 Z
b111000 \
bx ]
#135000
1!
b1101 #
1$
b100000 _
b1000000 `
#140000
0!
0$
b111000 &
b111100 '
b111000 <
b1110 >
b111100 Z
b111100 \
bx ]
#145000
1!
b1110 #
1$
b100000 _
b1000000 `
#150000
0!
0$
b111100 &
b1000000 '
b111100 <
b1111 >
b1000000 Z
b1000000 \
bx ]
#155000
1!
b1111 #
1$
b100000 _
b1000000 `
#160000
0!
0$
b1000000 &
b1000100 '
b1000000 <
b10000 >
b1000100 Z
b1000100 \
bx ]
#165000
1!
b10000 #
1$
b100000 _
b1000000 `
#170000
0!
0$
b1000100 &
b1001000 '
b1000100 <
b10001 >
b1001000 Z
b1001000 \
bx ]
#175000
1!
b10001 #
1$
b100000 _
b1000000 `
#180000
0!
0$
b1001000 &
b1001100 '
b1001000 <
b10010 >
b1001100 Z
b1001100 \
bx ]
#185000
1!
b10010 #
1$
b100000 _
b1000000 `
#190000
0!
0$
b1001100 &
b1010000 '
b1001100 <
b10011 >
b1010000 Z
b1010000 \
bx ]
#195000
1!
b10011 #
1$
b100000 _
b1000000 `
#200000
0!
0$
b1010000 &
b1010100 '
b1010000 <
b10100 >
b1010100 Z
b1010100 \
bx ]
#205000
1!
b10100 #
1$
b100000 _
b1000000 `
#210000
0!
0$
b1010100 &
b1011000 '
b1010100 <
b10101 >
b1011000 Z
b1011000 \
bx ]
#215000
1!
b10101 #
1$
b100000 _
b1000000 `
#220000
0!
0$
b1011000 &
b1011100 '
b1011000 <
b10110 >
b1011100 Z
b1011100 \
bx ]
#225000
1!
b10110 #
1$
b100000 _
b1000000 `
#230000
0!
0$
b1011100 &
b1100000 '
b1011100 <
b10111 >
b1100000 Z
b1100000 \
bx ]
#235000
1!
b10111 #
1$
b100000 _
b1000000 `
#240000
0!
0$
b1100000 &
b1100100 '
b1100000 <
b11000 >
b1100100 Z
b1100100 \
bx ]
#245000
1!
b11000 #
1$
b100000 _
b1000000 `
#250000
0!
0$
b1100100 &
b1101000 '
b1100100 <
b11001 >
b1101000 Z
b1101000 \
bx ]
#255000
1!
b11001 #
1$
b100000 _
b1000000 `
#260000
0!
0$
b1101000 &
b1101100 '
b1101000 <
b11010 >
b1101100 Z
b1101100 \
bx ]
#265000
1!
b11010 #
1$
b100000 _
b1000000 `
#270000
0!
0$
b1101100 &
b1110000 '
b1101100 <
b11011 >
b1110000 Z
b1110000 \
bx ]
#275000
1!
b11011 #
1$
b100000 _
b1000000 `
#280000
0!
0$
b1110000 &
b1110100 '
b1110000 <
b11100 >
b1110100 Z
b1110100 \
bx ]
#285000
1!
b11100 #
1$
b100000 _
b1000000 `
#290000
0!
0$
b1110100 &
b1111000 '
b1110100 <
b11101 >
b1111000 Z
b1111000 \
bx ]
#295000
1!
b11101 #
1$
b100000 _
b1000000 `
#300000
0!
0$
b1111000 &
b1111100 '
b1111000 <
b11110 >
b1111100 Z
b1111100 \
bx ]
#305000
1!
b11110 #
1$
b100000 _
b1000000 `
#310000
0!
0$
b1111100 &
b10000000 '
b1111100 <
b11111 >
b10000000 Z
b10000000 \
bx ]
#315000
1!
b11111 #
1$
b100000 _
b1000000 `
#320000
0!
0$
b10000000 &
b10000100 '
b10000000 <
b100000 >
b10000100 Z
b10000100 \
bx ]
#325000
1!
b100000 #
1$
b100000 _
b1000000 `
#330000
0!
0$
b10000100 &
b10001000 '
b10000100 <
b100001 >
b10001000 Z
b10001000 \
bx ]
#335000
1!
b100001 #
1$
b100000 _
b1000000 `
#340000
0!
0$
b10001000 &
b10001100 '
b10001000 <
b100010 >
b10001100 Z
b10001100 \
bx ]
#345000
1!
b100010 #
1$
b100000 _
b1000000 `
#350000
0!
0$
b10001100 &
b10010000 '
b10001100 <
b100011 >
b10010000 Z
b10010000 \
bx ]
#355000
1!
b100011 #
1$
b100000 _
b1000000 `
#360000
0!
0$
b10010000 &
b10010100 '
b10010000 <
b100100 >
b10010100 Z
b10010100 \
bx ]
#365000
1!
b100100 #
1$
b100000 _
b1000000 `
#370000
0!
0$
b10010100 &
b10011000 '
b10010100 <
b100101 >
b10011000 Z
b10011000 \
bx ]
#375000
1!
b100101 #
1$
b100000 _
b1000000 `
#380000
0!
0$
b10011000 &
b10011100 '
b10011000 <
b100110 >
b10011100 Z
b10011100 \
bx ]
#385000
1!
b100110 #
1$
b100000 _
b1000000 `
#390000
0!
0$
b10011100 &
b10100000 '
b10011100 <
b100111 >
b10100000 Z
b10100000 \
bx ]
#395000
1!
b100111 #
1$
b100000 _
b1000000 `
#400000
0!
0$
b10100000 &
b10100100 '
b10100000 <
b101000 >
b10100100 Z
b10100100 \
bx ]
#405000
1!
b101000 #
1$
b100000 _
b1000000 `
#410000
0!
0$
b10100100 &
b10101000 '
b10100100 <
b101001 >
b10101000 Z
b10101000 \
bx ]
#415000
1!
b101001 #
1$
b100000 _
b1000000 `
#420000
0!
0$
b10101000 &
b10101100 '
b10101000 <
b101010 >
b10101100 Z
b10101100 \
bx ]
#425000
1!
b101010 #
1$
b100000 _
b1000000 `
#430000
0!
0$
b10101100 &
b10110000 '
b10101100 <
b101011 >
b10110000 Z
b10110000 \
bx ]
#435000
1!
b101011 #
1$
b100000 _
b1000000 `
#440000
0!
0$
b10110000 &
b10110100 '
b10110000 <
b101100 >
b10110100 Z
b10110100 \
bx ]
#445000
1!
b101100 #
1$
b100000 _
b1000000 `
#450000
0!
0$
b10110100 &
b10111000 '
b10110100 <
b101101 >
b10111000 Z
b10111000 \
bx ]
#455000
1!
b101101 #
1$
b100000 _
b1000000 `
#460000
0!
0$
b10111000 &
b10111100 '
b10111000 <
b101110 >
b10111100 Z
b10111100 \
bx ]
#465000
1!
b101110 #
1$
b100000 _
b1000000 `
#470000
0!
0$
b10111100 &
b11000000 '
b10111100 <
b101111 >
b11000000 Z
b11000000 \
bx ]
#475000
1!
b101111 #
1$
b100000 _
b1000000 `
#480000
0!
0$
b11000000 &
b11000100 '
b11000000 <
b110000 >
b11000100 Z
b11000100 \
bx ]
#485000
1!
b110000 #
1$
b100000 _
b1000000 `
#490000
0!
0$
b11000100 &
b11001000 '
b11000100 <
b110001 >
b11001000 Z
b11001000 \
bx ]
#495000
1!
b110001 #
1$
b100000 _
b1000000 `
#500000
0!
0$
b11001000 &
b11001100 '
b11001000 <
b110010 >
b11001100 Z
b11001100 \
bx ]
#505000
1!
b110010 #
1$
b100000 _
b1000000 `
#510000
b100000 c
b10000 d
